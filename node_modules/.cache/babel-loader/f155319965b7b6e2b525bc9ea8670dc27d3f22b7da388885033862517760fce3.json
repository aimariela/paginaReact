{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TP\\\\Documents\\\\mariela\\\\www\\\\marielaai-website\\\\src\\\\components\\\\AIAssistant.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/AiAssistant.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AiAssistant() {\n  _s();\n  const [userQuestion, setUserQuestion] = useState(\"\");\n  const [aiResponse, setAiResponse] = useState(\"\");\n  const [assistantOpen, setAssistantOpen] = useState(false);\n  const handleToggleAssistant = () => {\n    setAssistantOpen(!assistantOpen);\n  };\n  const handleSendQuestion = async () => {\n    if (!userQuestion.trim()) return;\n    try {\n      var _data$choices, _data$choices$, _data$choices$$messag;\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-3.5-turbo\",\n          messages: [{\n            role: \"user\",\n            content: userQuestion\n          }]\n        })\n      });\n      const data = await response.json();\n      if (data !== null && data !== void 0 && (_data$choices = data.choices) !== null && _data$choices !== void 0 && (_data$choices$ = _data$choices[0]) !== null && _data$choices$ !== void 0 && (_data$choices$$messag = _data$choices$.message) !== null && _data$choices$$messag !== void 0 && _data$choices$$messag.content) {\n        setAiResponse(data.choices[0].message.content);\n      } else {\n        setAiResponse(\"No response from AI.\");\n      }\n    } catch (error) {\n      console.error(error);\n      setAiResponse(\"Error connecting to AI.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-assistant-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggleAssistant,\n      children: assistantOpen ? \"Close AI Assistant\" : \"Open AI Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), assistantOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assistant-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ask our AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"user-question\",\n        placeholder: \"Type your question here...\",\n        value: userQuestion,\n        onChange: e => setUserQuestion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendQuestion,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"ai-response\",\n        placeholder: \"AI response will appear here...\",\n        value: aiResponse,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(AiAssistant, \"C44SOfTd33UKmhdinmIImRbWu/s=\");\n_c = AiAssistant;\nexport default AiAssistant;\nvar _c;\n$RefreshReg$(_c, \"AiAssistant\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AiAssistant","_s","userQuestion","setUserQuestion","aiResponse","setAiResponse","assistantOpen","setAssistantOpen","handleToggleAssistant","handleSendQuestion","trim","_data$choices","_data$choices$","_data$choices$$messag","response","fetch","method","headers","Authorization","process","env","REACT_APP_OPENAI_API_KEY","body","JSON","stringify","model","messages","role","content","data","json","choices","message","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/TP/Documents/mariela/www/marielaai-website/src/components/AIAssistant.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/AiAssistant.css\";\r\n\r\nfunction AiAssistant() {\r\n  const [userQuestion, setUserQuestion] = useState(\"\");\r\n  const [aiResponse, setAiResponse] = useState(\"\");\r\n  const [assistantOpen, setAssistantOpen] = useState(false);\r\n\r\n  const handleToggleAssistant = () => {\r\n    setAssistantOpen(!assistantOpen);\r\n  };\r\n\r\n  const handleSendQuestion = async () => {\r\n    if (!userQuestion.trim()) return;\r\n\r\n    try {\r\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\r\n        },\r\n        body: JSON.stringify({\r\n          model: \"gpt-3.5-turbo\",\r\n          messages: [\r\n            {\r\n              role: \"user\",\r\n              content: userQuestion,\r\n            },\r\n          ],\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data?.choices?.[0]?.message?.content) {\r\n        setAiResponse(data.choices[0].message.content);\r\n      } else {\r\n        setAiResponse(\"No response from AI.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setAiResponse(\"Error connecting to AI.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ai-assistant-container\">\r\n      <button onClick={handleToggleAssistant}>\r\n        {assistantOpen ? \"Close AI Assistant\" : \"Open AI Assistant\"}\r\n      </button>\r\n\r\n      {assistantOpen && (\r\n        <div className=\"assistant-panel\">\r\n          <h2>Ask our AI Assistant</h2>\r\n          <textarea\r\n            className=\"user-question\"\r\n            placeholder=\"Type your question here...\"\r\n            value={userQuestion}\r\n            onChange={(e) => setUserQuestion(e.target.value)}\r\n          />\r\n          <button onClick={handleSendQuestion}>Send</button>\r\n\r\n          <textarea\r\n            className=\"ai-response\"\r\n            placeholder=\"AI response will appear here...\"\r\n            value={aiResponse}\r\n            readOnly\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AiAssistant;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}